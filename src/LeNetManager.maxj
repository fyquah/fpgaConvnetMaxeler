import com.maxeler.maxcompiler.v2.build.EngineParameters;

public class LeNetManager extends NetworkManager {
    private final int inputHeight = 28;
    private final int inputWidth = 28;
    private final int inputChannels = 1;

    public String getParamsDirectory() {
        return "lenet_params";
    }

    public NetworkParameters[] getNetworkParameters() {
        /* Assumes convolution values are in lenet_params/conv1_bias.txt and
         * lenet_params/conv1_weights.txt */
        ConvolutionParameters conv1 = new ConvolutionParameters(
            new Dimension(inputHeight, inputWidth, inputChannels),
            20, /* outputChannel */
            getConvWeights(
                20, /* outputChannels */
                inputChannels, 
                5, /* kernelDim */
                1),
            getConvBias(20 /* outputChannels */,
                        1 /* convLayerId */)
        );
        conv1.foldingFactor = Integer.parseInt(
                getConfigProperty("conv1Factor"));
        conv1.kernelFoldingFactor = Integer.parseInt(
                getConfigProperty("conv1KernelFactor"));
        PoolingParameters pool1 = new PoolingParameters(
                conv1.outputDimension(),
                2, /* poolingDim */
                PoolingUnit.Type.Max);

        /* Assumes convolution values are in lenet_params/conv2_bias.txt and
         * lenet_params/conv2_weights.txt */
        ConvolutionParameters conv2 = new ConvolutionParameters(
            pool1.outputDimension(),
            50, /* outputChannel */
            getConvWeights(
                50, /* outputChannels */
                20, /* inputChannels */
                5, /* kernelDim */
                2),
            getConvBias(50 /* outputChannels */,
                        2 /* convLayerId */)
        );
        conv2.foldingFactor = Integer.parseInt(
                getConfigProperty("conv2Factor"));
        conv2.kernelFoldingFactor = Integer.parseInt(
                getConfigProperty("conv2KernelFactor"));
        PoolingParameters pool2 = new PoolingParameters(
                conv2.outputDimension(),
                2, /* poolingDim */
                PoolingUnit.Type.Max);
        return new NetworkParameters[]{conv1, pool1, conv2, pool2};
    }

    public LeNetManager(EngineParameters engineParameters) {
        super(engineParameters); 
    }
}
