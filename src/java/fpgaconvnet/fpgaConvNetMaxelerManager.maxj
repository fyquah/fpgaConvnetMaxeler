package fpgaconvnet;
// package nothing;

import org.junit.runner.JUnitCore;
import org.junit.runner.Request;
import org.junit.runner.Result;
import org.junit.runner.notification.Failure;
import java.util.List;

import com.maxeler.maxcompiler.v2.build.EngineParameters;
import com.maxeler.maxcompiler.v2.managers.BuildConfig;
import com.maxeler.maxcompiler.v2.managers.custom.CustomManager;


public class fpgaConvNetMaxelerManager {
    public static void resource_bench(String[] args) {
        ResourceBenchmarkParameters params = new ResourceBenchmarkParameters(args);
        ResourceBenchmarkManager manager = new ResourceBenchmarkManager(
            params,
            params.getConvFoldingFactor(),
            params.getKernelFoldingFactor());
        BuildConfig buildConfig = manager.getBuildConfig();
        buildConfig.setBuildEffort(BuildConfig.Effort.VERY_HIGH);
        buildConfig.setMPPRCostTableSearchRange(params.getMPPRStartCT(), params.getMPPREndCT());
        buildConfig.setMPPRParallelism(params.getMPPRThreads());
        buildConfig.setMPPRRetryNearMissesThreshold(params.getMPPRRetryThreshold());

        CustomManager.Config config = manager.config;
		// was previously 125 (didn't work due to failed timing)
        config.setDefaultStreamClockFrequency(75);

        manager.createSLiCinterface(manager.interfaceDefault());
        manager.build();
    }

    public static void le_net(String[] args) {
        EngineParameters params = new EngineParameters(args);
        LeNetManager manager = new LeNetManager(params);
        BuildConfig buildConfig = manager.getBuildConfig();
        buildConfig.setBuildEffort(BuildConfig.Effort.VERY_HIGH);
        buildConfig.setMPPRCostTableSearchRange(params.getMPPRStartCT(), params.getMPPREndCT());
        buildConfig.setMPPRParallelism(params.getMPPRThreads());
        buildConfig.setMPPRRetryNearMissesThreshold(params.getMPPRRetryThreshold());

        manager.createSLiCinterface(manager.interfaceDefault());
        manager.build();
    }

    // TODO(ADD_NETWORK): Adding a new work should look something like this:
    // public static void le_net(String[] args) {
    //     EngineParameters params = new EngineParameters(args);
    //     MyNewNetworkManager manager = new MyNewNetworkManager(params);
    //     BuildConfig buildConfig = manager.getBuildConfig();
    //     buildConfig.setBuildEffort(BuildConfig.Effort.VERY_HIGH);
    //     buildConfig.setMPPRCostTableSearchRange(params.getMPPRStartCT(), params.getMPPREndCT());
    //     buildConfig.setMPPRParallelism(params.getMPPRThreads());
    //     buildConfig.setMPPRRetryNearMissesThreshold(params.getMPPRRetryThreshold());

    //     manager.createSLiCinterface(manager.interfaceDefault());
    //     manager.build();
    // }

    public static void main(String[] args) {
        String[] x = new String[args.length - 1];

        for (int i = 1 ; i < args.length ; i++) {
            x[i-1] = args[i];
        }

        if (args[0].equals("le_net")) le_net(x);
        else if (args[0].equals("resource_bench")) resource_bench(x);
        // TODO(ADD_NETWORK): Add additional network here
        // else if(args[0].equals("my_new_network")) my_new_network(x);
    }

}

