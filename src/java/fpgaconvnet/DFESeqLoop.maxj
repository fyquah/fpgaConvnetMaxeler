package fpgaconvnet;
// package nothing;

import com.maxeler.maxcompiler.v2.kernelcompiler.Kernel;
import com.maxeler.maxcompiler.v2.kernelcompiler.KernelLib;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.OffsetExpr;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar;

class DFESeqLoop extends KernelLib {
    DFEVar itr1, done, feedback, feed_in, global_pos, local_pos;
    OffsetExpr loop;

    DFESeqLoop(Kernel owner, String loop_name, int loop_itrs) {
        super(owner);
        loop = stream.makeOffsetAutoLoop(loop_name);
        DFEVar pipe_len = loop.getDFEVar(this, dfeUInt(32));
        global_pos = control.count.simpleCounter(32);
        itr1 = global_pos < pipe_len;
        debug.simPrintf("pipe_len = %d\n", pipe_len);
        debug.simPrintf("global_pos = %d\n", global_pos);
        // done = global_pos.eq(0) | global_pos.eq(15);
        done = global_pos >= (pipe_len * loop_itrs);
    }

    void set_input(DFEVar loop_in) {
        feed_in = loop_in.getType().newInstance(this);
        feedback = itr1 ? feed_in : loop_in; // feed_in in the first iteration
    }
    void set_output(DFEVar result) {
        feed_in <== stream.offset(result, -loop); // connect the loop
    }
}
